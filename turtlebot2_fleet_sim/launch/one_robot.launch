<launch>
  <arg name="robot_name"/>
  <arg name="init_pose"/>
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>
  <!-- <arg name="tf_prefix"/> -->

  <!-- <arg name="urdf_file" default="$(find xacro)/xacro '$(find turtlebot_description)/robots/kobuki_hexagons_kinect.urdf.xacro'"/>
  <param name="robot_description" command="$(arg urdf_file)"/> -->

  <!-- Gazebo model spawner -->
  <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg initial_pose_x) -y $(arg initial_pose_y) 
        -unpause -urdf -param /robot_description -model $(arg robot_name)"
        respawn="false" output="screen"/>

  <!-- <node pkg="tf" type="static_transform_publisher" name="map_to_$(arg robot_name)"
        args="$(arg initial_pose_x) $(arg initial_pose_y) 0 0 0 0 map $(arg robot_name)_tf/odom 10"/> -->

  <!-- Velocity muxer -->
  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
        args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml"/>
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node>

  <!-- Bumper/cliff to pointcloud (not working, as it needs sensors/core messages) -->
  <!-- <include file="$(find turtlebot_bringup)/launch/includes/kobuki/bumper2pc.launch.xml"/> -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="30.0" />
    <!-- <param name="tf_prefix" type="string" value="$(arg tf_prefix)" /> -->
    <!-- <remap from="tf" to="$(arg robot_name)/tf"/> -->
  </node>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager" /> -->
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="$(arg robot_name)_tf/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="camera/depth/image_raw"/>
  </node>
  <!-- NON-NODELET TEST -->
  <!-- <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="$(arg robot_name)_depthimage_to_laserscan">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
  </node> -->
  <!-- <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
    <param name="target_frame" value="camera_depth_frame"/>
  </node> -->

  <!-- AMCL -->
  <!-- <include file="$(find turtlebot_navigation)/launch/includes/amcl/kinect_amcl.launch.xml">
    <arg name="use_map_topic" value="true" />
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
    <arg name="scan_topic" value="scan"/>
    <arg name="odom_frame_id" value="$(arg robot_name)_tf/odom"/>
    <arg name="base_frame_id" value="$(arg robot_name)_tf/base_footprint"/>
  </include> -->

  <!-- FAKE LOCALIZATION -->
  <node pkg="fake_localization" type="fake_localization" respawn="false" name="fake_loc">
    <remap from="base_pose_ground_truth" to="odom"/>
    <param name="odom_frame_id" type="string" value="$(arg robot_name)_tf/odom"/>
    <param name="base_frame_id" type="string" value="$(arg robot_name)_tf/base_footprint"/>
    <param name="delta_x" type="double" value="$(arg initial_pose_x)"/>
    <param name="delta_y" type="double" value="$(arg initial_pose_y)"/>
    <param name="delta_yaw" type="double" value="3.1415"/>
  </node>

  <!-- MOVE BASE -->
 <include file="$(find turtlebot_fleet)/launch/includes/move_base.launch.xml">
    <arg name="laser_topic" value="/$(arg robot_name)/scan"/>
    <arg name="odom_topic" value="/$(arg robot_name)/odom"/>
    <arg name="map_topic" value="/map"/>
    <arg name="odom_frame_id" value="$(arg robot_name)_tf/odom"/>
    <arg name="base_frame_id" value="$(arg robot_name)_tf/base_footprint"/>
 </include>

  <node pkg="free_fleet_client_ros1" type="free_fleet_client_ros1" output="screen"
        name="free_fleet_client">
    <param name="fleet_name" type="string" value="turtlebot2"/>
    <param name="robot_name" type="string" value="$(arg robot_name)"/>
    <param name="level_name" type="string" value="L1"/>
    <param name="dds_domain" type="int" value="42"/>
    <param name="max_dist_to_first_waypoint" type="double" value="10.0"/>
    <param name="battery_state_topic" value="/fake_battery_state"/>
    <param name="robot_frame" value="$(arg robot_name)_tf/base_footprint"/>
    <param name="move_base_server_name" value="/$(arg robot_name)/move_base"/>
  </node>
</launch>
